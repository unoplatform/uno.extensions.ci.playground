name: CI

on: 
  push:
    branches:
      - main
      - release/**

  pull_request:
    types: [opened, synchronize, reopened]
    branches:
      - main
      - release/**
env:
  STEP_TIMEOUT: 60

jobs:
  # build_android:
  #   name: Build Android Unsigned
  #   runs-on: macos-latest
  #   steps:
  #     - name: Checkout
  #       timeout-minutes: ${{ fromJSON(env.STEP_TIMEOUT) }}
  #       uses: actions/checkout@v3
  #       with:
  #        fetch-depth: 0 
  #     - name: Install Dependencies
  #       timeout-minutes: ${{ fromJSON(env.STEP_TIMEOUT) }}
  #       uses: "./.github/workflows/steps/install_dependencies"
  #       with:
  #         target-platform: 'android'
      
  #     - name: Build Mobile (Android)
  #       timeout-minutes: ${{ fromJSON(env.STEP_TIMEOUT) }}
  #       uses: "./.github/workflows/steps/build_android"
  #       with:
  #         package-id: "Android"
  #         target-framework: "net7.0-android"
  #         project-to-build: "Demo.Mobile/Demo.Mobile.csproj"

  #   ###################################################
  #   #                 IMPORTANT                       #
  #   # Store base64 certificates in your repo secrets  #
  #   # then just replace the commented base64 variables#
  #   # down below with your new secret variables       #
  #   ###################################################
  # build_android_signed:
  #   name: Build and Sign Android
  #   runs-on: macos-latest
  #   steps:
  #     - name: Checkout
  #       timeout-minutes: ${{ fromJSON(env.STEP_TIMEOUT) }}
  #       uses: actions/checkout@v3
  #       with:
  #         fetch-depth: 0 
  #     - name: Install Dependencies
  #       timeout-minutes: ${{ fromJSON(env.STEP_TIMEOUT) }}
  #       uses: "./.github/workflows/steps/install_dependencies"
  #       with:
  #         target-platform: 'android'
      
  #     - name: Build and Sign Mobile (Android)
  #       timeout-minutes: ${{ fromJSON(env.STEP_TIMEOUT) }}
  #       uses: "./.github/workflows/steps/build_android"
  #       with:
  #         sign-package: 'true'
  #         target-framework: "net7.0-android"
  #         package-id: "signed_android"
  #         certificate:  ""          #${{ secrets.ANDROID_BASE64_JKS_CERTIFICATE }}
  #         certificate-password:  "" #${{ secrets.ANDROID_JKS_CERTIFICATE_PASSWORD }}
  #         certificate-alias:  ""    #${{ secrets.ANDROID_JKS_CERTIFICATE_ALIAS }}
  #         project-to-build: "Demo.Mobile/Demo.Mobile.csproj"           

  # build_ios:
  #   name: Build iOS
  #   runs-on: windows-latest
  #   steps:
  #     - name: Checkout
  #       timeout-minutes: ${{ fromJSON(env.STEP_TIMEOUT) }}
  #       uses: actions/checkout@v3
  #       with:
  #        fetch-depth: 0 
  #     - name: Install Dependencies
  #       timeout-minutes: ${{ fromJSON(env.STEP_TIMEOUT) }}
  #       uses: "./.github/workflows/steps/install_dependencies"
  #       with:
  #         target-platform: 'ios'
      
  #     - name: Build Mobile (iOS)
  #       timeout-minutes: ${{ fromJSON(env.STEP_TIMEOUT) }}
  #       uses: "./.github/workflows/steps/build_mobile"
  #       with:
  #         project-to-build: "Demo.Mobile/Demo.Mobile.csproj" 
  #         target-framework: "net7.0-ios"

    ###################################################
    #                 IMPORTANT                       #
    # Store base64 certificates in your repo secrets  #
    # then just replace the commented base64 variables#
    # down below with your new secret variables       #
    ###################################################
  build_ios_signed:
    name: Build and Sign iOS
    runs-on: macos-latest
    steps:
      - name: Checkout
        timeout-minutes: ${{ fromJSON(env.STEP_TIMEOUT) }}
        uses: actions/checkout@v3
        with:
          fetch-depth: 0 

      - name: Install Dependencies
        timeout-minutes: ${{ fromJSON(env.STEP_TIMEOUT) }}
        uses: "./.github/workflows/steps/install_dependencies"     
        with:
          target-platform: 'ios'
      
      - name: Build Mobile (iOS)
        timeout-minutes: ${{ fromJSON(env.STEP_TIMEOUT) }}
        uses: "./.github/workflows/steps/build_ios"
        with:
          package-id: "signed_ios"
          target-framework: "net7.0-ios"
          certificate: "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"           #${{ secrets.BASE64_P12_CERTIFICATE }}
          certificate-password: "password"  #${{ secrets.BASE64_P12_PASSWORD }}
          codesign-provision: 'Uno_DevOps'
          codesign-key: 'Apple Development: Created via API (K2ZCUAY94H)'
          project-to-build: "Demo.Mobile/Demo.Mobile.csproj"          

  # build_maccatalyst:
  #   name: Build MacCatalyst
  #   runs-on: macos-latest
  #   steps:
  #     - name: Checkout
  #       timeout-minutes: ${{ fromJSON(env.STEP_TIMEOUT) }}
  #       uses: actions/checkout@v3
  #       with:
  #        fetch-depth: 0 
  #     - name: Install Dependencies
  #       timeout-minutes: ${{ fromJSON(env.STEP_TIMEOUT) }}
  #       uses: "./.github/workflows/steps/install_dependencies"
  #       with:
  #         target-platform: 'macos'
      
  #     - name: Build Mobile (MacCatalyst)
  #       timeout-minutes: ${{ fromJSON(env.STEP_TIMEOUT) }}
  #       uses: "./.github/workflows/steps/build_mobile"
  #       with:
  #         project-to-build: "Demo.Mobile/Demo.Mobile.csproj" 
  #         target-framework: "net7.0-maccatalyst"

  # build_wasm:
  #   name: Build Wasm
  #   runs-on: macos-latest
  #   steps:
  #     - name: Checkout
  #       timeout-minutes: ${{ fromJSON(env.STEP_TIMEOUT) }}
  #       uses: actions/checkout@v3
  #       with:
  #        fetch-depth: 0 
  #     - name: Install Dependencies
  #       timeout-minutes: ${{ fromJSON(env.STEP_TIMEOUT) }}
  #       uses: "./.github/workflows/steps/install_dependencies"
  #       with:
  #         target-platform: 'wasm'
      
  #     - name: Build Wasm
  #       timeout-minutes: ${{ fromJSON(env.STEP_TIMEOUT) }}
  #       uses: "./.github/workflows/steps/build_wasm"
  #       with:
  #         package-id: "Wasm"
  #         project-to-build: "Demo.Wasm/Demo.Wasm.csproj" 

  # build_windows_unsigned:
  #   name: Build Windows Unsigned
  #   runs-on: windows-latest
  #   steps:
  #     - name: Checkout
  #       timeout-minutes: ${{ fromJSON(env.STEP_TIMEOUT) }}
  #       uses: actions/checkout@v3
  #       with:
  #        fetch-depth: 0 
  #     - name: Install Dependencies
  #       timeout-minutes: ${{ fromJSON(env.STEP_TIMEOUT) }}
  #       uses: "./.github/workflows/steps/install_dependencies"
  #       with:
  #         target-platform: 'uwp'
      
  #     - name: Build and Publish Windows(Unsigned)
  #       timeout-minutes: ${{ fromJSON(env.STEP_TIMEOUT) }}
  #       uses: "./.github/workflows/steps/build_windows"
  #       with:
  #         package-id: "WindowsUnsigned"
  #         project-to-build: "Demo.Windows/Demo.Windows.csproj"

  #   ###################################################
  #   #                 IMPORTANT                       #
  #   # Store base64 certificates in your repo secrets  #
  #   # then just replace the commented base64 variables#
  #   # down below with your new secret variables       #
  #   ###################################################
  # build_windows_signed:
  #   name: Build and Sign Windows
  #   runs-on: windows-latest
  #   steps:
  #     - name: Checkout
  #       timeout-minutes: ${{ fromJSON(env.STEP_TIMEOUT) }}
  #       uses: actions/checkout@v3
  #       with:
  #         fetch-depth: 0 
  #     - name: Install Dependencies
  #       timeout-minutes: ${{ fromJSON(env.STEP_TIMEOUT) }}
  #       uses: "./.github/workflows/steps/install_dependencies"
  #       with:
  #         target-platform: 'uwp'
            
  #     - name: Build and Publish Windows(Signed)
  #       timeout-minutes: ${{ fromJSON(env.STEP_TIMEOUT) }}
  #       uses: "./.github/workflows/steps/build_windows"
  #       with:
  #         package-id: "signed_windows"
  #         certificate: ""       #${{ secrets.WINDOWS_BASE64_PFX_CERTIFICATE }}
  #         project-to-build: "Demo.Windows/Demo.Windows.csproj"                  

  # build_linux:
  #   name: Build Linux
  #   runs-on: macos-latest
  #   steps:
  #     - name: Checkout
  #       timeout-minutes: ${{ fromJSON(env.STEP_TIMEOUT) }}
  #       uses: actions/checkout@v3
  #       with:
  #        fetch-depth: 0 
  #     - name: Install Dependencies
  #       timeout-minutes: ${{ fromJSON(env.STEP_TIMEOUT) }}
  #       uses: "./.github/workflows/steps/install_dependencies"
  #       with:
  #         target-platform: 'linux'
      
  #     - name: Build Linux
  #       timeout-minutes: ${{ fromJSON(env.STEP_TIMEOUT) }}
  #       uses: "./.github/workflows/steps/build_desktop"
  #       with:
  #         package-id: "Linux"
  #         project-to-build: "Demo.Skia.Linux.FrameBuffer/Demo.Skia.Linux.FrameBuffer.csproj"  

  # build_wpf:
  #   name: Build WPF
  #   runs-on: windows-latest
  #   steps:
  #     - name: Checkout
  #       timeout-minutes: ${{ fromJSON(env.STEP_TIMEOUT) }}
  #       uses: actions/checkout@v3
  #       with:
  #        fetch-depth: 0 
  #     - name: Install Dependencies
  #       timeout-minutes: ${{ fromJSON(env.STEP_TIMEOUT) }}
  #       uses: "./.github/workflows/steps/install_dependencies"
  #       with:
  #         target-platform: 'skiawpf'
      
  #     - name: Build WPF
  #       timeout-minutes: ${{ fromJSON(env.STEP_TIMEOUT) }}
  #       uses: "./.github/workflows/steps/build_desktop"
  #       with:
  #         package-id: "WPF"
  #         project-to-build: "Demo.Skia.WPF/Demo.Skia.WPF.csproj"  

  # build_gtk:
  #   name: Build Gtk
  #   runs-on: macos-latest
  #   steps:
  #     - name: Checkout
  #       timeout-minutes: ${{ fromJSON(env.STEP_TIMEOUT) }}
  #       uses: actions/checkout@v3
  #       with:
  #        fetch-depth: 0 
  #     - name: Install Dependencies
  #       timeout-minutes: ${{ fromJSON(env.STEP_TIMEOUT) }}
  #       uses: "./.github/workflows/steps/install_dependencies"
  #       with:
  #         target-platform: 'skiagtk_macos'
              
  #     - name: Build GTK
  #       timeout-minutes: ${{ fromJSON(env.STEP_TIMEOUT) }}
  #       uses: "./.github/workflows/steps/build_desktop"
  #       with:
  #         package-id: "GTK"
  #         project-to-build: "Demo.Skia.Gtk/Demo.Skia.Gtk.csproj"
