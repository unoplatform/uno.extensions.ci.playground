name: Install Dependencies
description: ""

inputs:
  install-windowsSDK:
    description: 'If true WindowsSDK will be installed'
    required: false
    default: 'true'
  install-mobileWorkloads:
    description: 'If true mobile workloads for iOS, Android, MacCatallyst will be installed'
    required: false
    default: 'true'
  install-gtk:
    description: 'If true WindowsSDK will be installed'
    required: false
    default: 'false'    

runs:
  using: "composite"
  steps:
    - name: Setup .NET 6
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: '6.0.404'

    # Install Windows SDK
    - name: Install Windows SDK 1903
      shell: pwsh
      run: |
        if ('true' -eq '${{ inputs.install-windowsSDK }}') {
          $Folder = 'C:\Program Files (x86)\Windows Kits\10\'
          Write-Host "Checking if Windows SDK is installed"
          if (Test-Path -Path $Folder) {
              Write-Host "SDK already installed"
          } else {
              Write-Host "Installing Windows SDK 1903 (10.0.18362.1)..." -ForegroundColor Cyan

              Write-Host "Downloading..."
              $exePath = "$env:temp\wdksetup.exe"
              (New-Object Net.WebClient).DownloadFile('https://go.microsoft.com/fwlink/?linkid=2083338', $exePath)

              Write-Host "Installing..."
              cmd /c start /wait $exePath /features + /quiet

              Remove-Item $exePath
              Write-Host "Installed" -ForegroundColor Green

              Start-Sleep -s 15
          }
        }

    # Install .net6.0 Mobile Workloads
    - name: Install Mobile Workloads
      shell: pwsh
      run: |
        if ('true' -eq '${{ inputs.install-mobileWorkloads }}') {
          $availableWorkloads = dotnet workload list| Format-Table -HideTableHeaders | Out-String
          Write-Host "Installed Workloads: $availableWorkloads" 
          $isAndroidInstalled = $availableWorkloads.Contains("android")
          $isiOSInstalled = $availableWorkloads.Contains("ios")
          $isMacCatalyst = $availableWorkloads.Contains("maccatalyst")

          if(-Not $isAndroidInstalled){
            Write-Host  "Installing Android Workload"
            dotnet workload install android
          }

          if(-Not $isiOSInstalled){
            Write-Host "Installing iOS workload"
            dotnet workload install ios
          }

          if(-Not $isMacCatalyst){
            Write-Host "Installing maccatalyst workload"
            dotnet workload install maccatalyst
          } 

          Start-Sleep -s 15    
        }
      
    # Install GTK4
    - name: Install GTK4
      continue-on-error: true
      shell: pwsh
      run: |
        if ('true' -eq '${{ inputs.install-gtk }}') {
          $Folder = 'C:\gtk-build\gtk\x64\release\bin\'
          Write-Host "Checking if GTK4 is installed"

          if (Test-Path -Path $Folder) {
              Write-Host "SDK already installed"
          } else {
              Write-Host "Installing GTK4"
              Set-ExecutionPolicy Bypass -Scope Process -Force; iex ((New-Object System.Net.WebClient).DownloadString('https://community.chocolatey.org/install.ps1'))
              choco install git
              choco install msys2
              choco install visualstudio2022-workload-vctools

              Write-Host "Installing Python"
              choco install python
              Write-Host "Python Installation Finished"

              python -m pip install --user pipx
              python -m pipx ensurepath
              pipx install gvsbuild
              
              gvsbuild build gtk4

              Write-Host "Adding GTK4 to Path"
              $env:Path = "C:\gtk-build\gtk\x64\release\bin;" + $env:Path
              Write-Host "GTK4 Installation Finished"
              
              Start-Sleep -s 15
          }
        }