name: Build WinUI
description: ""

runs:
  using: "composite"
  steps:     
    - name: Setup .NET 6
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: '6.0.404'

    - name: Sleep for 15s to release dotnet.exe
      run: Start-Sleep -s 15
      shell: pwsh

    # Install Windows SDK
    - name: Install Windows SDK 1903
      shell: pwsh
      run: |
            Write-Host "Installing Windows SDK 1903 (10.0.18362.1)..." -ForegroundColor Cyan

            Write-Host "Downloading..."
            $exePath = "$env:temp\wdksetup.exe"
            (New-Object Net.WebClient).DownloadFile('https://go.microsoft.com/fwlink/?linkid=2083338', $exePath)

            Write-Host "Installing..."
            cmd /c start /wait $exePath /features + /quiet

            Remove-Item $exePath
            Write-Host "Installed" -ForegroundColor Green

    - name: Sleep for 15s to release dotnet.exe
      run: Start-Sleep -s 15
      shell: pwsh

    # Install .net6.0 Mobile Workloads
    - name: Install Mobile Workloads
      shell: pwsh
      run: |
        $availableWorkloads = dotnet workload list| Format-Table -HideTableHeaders | Out-String
        Write-Host "Installed Workloads: $availableWorkloads" 
        $isAndroidInstalled = $availableWorkloads.Contains("android")
        $isiOSInstalled = $availableWorkloads.Contains("ios")
        $isMacCatalyst = $availableWorkloads.Contains("maccatalyst")

        if(-Not $isAndroidInstalled){
          Write-Host  "Installing Android Workload"
          dotnet workload install android
        }

        if(-Not $isiOSInstalled){
          Write-Host "Installing iOS workload"
          dotnet workload install ios
        }

        if(-Not $isMacCatalyst){
          Write-Host "Installing maccatalyst workload"
          dotnet workload install maccatalyst
        }     

    - name: Sleep for 15s to release dotnet.exe
      run: Start-Sleep -s 15
      shell: pwsh