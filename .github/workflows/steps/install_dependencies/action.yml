name: Install Dependencies
description: ""

inputs:
  target-platform:
    description: 'The platform to install dependencies for. #See available values at https://platform.uno/docs/articles/external/uno.check/doc/using-uno-check.html'
    required: true
    default: ''
  dotnet-version:
    description: 'If true mobile workloads for iOS, Android, MacCatallyst will be installed'
    required: false
    default: '7.0.x'
  unocheck-manifest:
    description: 'If true WindowsSDK will be installed'
    required: false
    default: 'https://raw.githubusercontent.com/unoplatform/uno.check/main/manifests/uno.ui.manifest.json'    

runs:
  using: "composite"
  steps:
    - name: Setup DotNET ${{ inputs.dotnet-version }}
      uses: actions/setup-dotnet@v2
      with:
        dotnet-version: '${{ inputs.dotnet-version }}'

    # Install GTK MacOS
    - name: Install GTK Workloads
      if: ${{ inputs.target-platform == 'skiagtk_macos' }}
      shell: bash
      run: |
          /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
          echo 'eval "$(/opt/homebrew/bin/brew shellenv)"' >> ~/.zprofile
          brew install gtk+
          dotnet tool install -g uno.check
          ~/.dotnet/tools/uno-check --ci --non-interactive --fix --target ios --target android --target macos --manifest ${{ inputs.unocheck-manifest }}

    # Install GTK Windows
    - name: Install GTK Workloads
      if: ${{ inputs.target-platform == 'skiagtk_win' }}
      shell: pwsh
      run: |
           Write-Host "Installing GTK4"
           Set-ExecutionPolicy Bypass -Scope Process -Force; iex ((New-Object System.Net.WebClient).DownloadString('https://community.chocolatey.org/install.ps1'))
           choco install git
           choco install msys2
           choco install visualstudio2022-workload-vctools
              
           Write-Host "Installing Python"
           choco install python
           Write-Host "Python Installation Finished"

           python -m pip install --user pipx
           python -m pipx ensurepath
           pipx install gvsbuild
           #build GTK
           gvsbuild build gtk4

           Write-Host "Adding GTK4 to Path"
           $env:Path = "C:\gtk-build\gtk\x64\release\bin;" + $env:Path
           Write-Host "GTK4 Installation Finished"

           dotnet tool install -g uno.check
           uno-check --ci --non-interactive --fix --target ios --target android --target macos --manifest ${{ inputs.unocheck-manifest }}

    # Install Linux
    - name: Install Linux Workloads
      if: ${{ inputs.target-platform == 'linux' }}
      shell: bash
      run: |
           dotnet tool install -g uno.check
           ~/.dotnet/tools/uno-check --ci --non-interactive --fix --target ios --target android --target macos --manifest ${{ inputs.unocheck-manifest }}

    - name: Install ${{ inputs.target-platform }} Workloads
      if: ${{ inputs.target-platform != 'linux' && !contains( inputs.target-platform, 'skiagtk')}}
      shell: pwsh
      run: |
           dotnet tool install -g uno.check
           uno-check --ci --non-interactive --fix --target ${{ inputs.target-platform }} --manifest ${{ inputs.unocheck-manifest }}
