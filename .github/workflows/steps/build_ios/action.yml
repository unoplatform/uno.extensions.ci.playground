name: Build Android
description: ""

inputs:
  package-id:
    description: 'Compiled Package ID'
    required: true
    default: 'release_Mobile'
  project-to-build:
    description: 'Relative path to .csproj file'
    required: true
    default: ''   
  artifact-retention-policy: 
    description: 'Number of days to keep the build artifacts'
    required: false
    default: '90'
  certificate: 
     description: "Base64 Certificate for signing .ipa package."
     required: true    
     default: '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'
  certificate-password: 
     description: "Certificate password."
     required: true      
     default: 'contoso'
  provisioning-profile: 
     description: "Base64 provisioning profile"
     required: true
     default: ''
  keychain-password: 
     description: "New keychain password. This can be a random string value"
     required: false
     default: 'KEYCHAIN_PASSWORD'      
  publish-artifacts: 
     description: "If true, compilation artifacts will be published and put under Job Summary section"
     required: false
     default: 'true' 

runs:
  using: "composite"
  steps:
    - name: Setup GitVersion
      uses: gittools/actions/gitversion/setup@v0.9.9
      with:
        versionSpec: '5.x'

    - name: GitVersion
      id: gitversion
      uses: gittools/actions/gitversion/execute@v0.9.9
      with:
        useConfigFile: true
        configFilePath: ./.github/workflows/config/gitversion.yml

    - name: Set XCode Version
      if: runner.os == 'macOS'
      shell: bash
      run: |
        sudo xcode-select -s "/Applications/Xcode_14.1.app"
        echo "MD_APPLE_SDK_ROOT=/Applications/Xcode_14.1.app" >> $GITHUB_ENV
        
    - name: Install the Apple certificate and provisioning profile
      shell: bash
      env:
        BUILD_CERTIFICATE_BASE64: ${{ inputs.certificate }}
        P12_PASSWORD: ${{ inputs.certificate-password }}
        BUILD_PROVISION_PROFILE_BASE64: ${{ inputs.provisioning-profile }}
        KEYCHAIN_PASSWORD: ${{ inputs.keychain-password }}
      run: |
          echo -n "create variables"
          CERTIFICATE_PATH=$RUNNER_TEMP/build_certificate.p12
          PP_PATH=$RUNNER_TEMP/build_pp.mobileprovision
          KEYCHAIN_PATH=$RUNNER_TEMP/app-signing.keychain-db

          echo -n "import certificate and provisioning profile from secrets"
          echo -n "$BUILD_CERTIFICATE_BASE64" | base64 --decode -o $CERTIFICATE_PATH
          echo -n "$BUILD_PROVISION_PROFILE_BASE64" | base64 --decode -o $PP_PATH

          echo -n "create temporary keychain"
          security create-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH
          security set-keychain-settings -lut 21600 $KEYCHAIN_PATH
          security unlock-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH

          echo -n "import certificate to keychain"
          security import $CERTIFICATE_PATH -P "$P12_PASSWORD" -A -t cert -f pkcs12 -k $KEYCHAIN_PATH
          security list-keychain -d user -s $KEYCHAIN_PATH

          echo -n "apply provisioning profile"
          mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles
          cp $PP_PATH ~/Library/MobileDevice/Provisioning\ Profiles
          
    # Create the app package by building and packaging the project
    - name: Build and create package
      shell: pwsh
      run: |
        dotnet build  -c Debug -p:TargetFramework=net6.0-ios /p:packageApp=false /p:buildForSimulator=true  -o .\bin\Release${{ inputs.package-id }}\ ${{ inputs.project-to-build }} 

        $finalPackageFolder = ".\artifacts${{ inputs.package-id }}"
        Write-Host "Creating package folder: $finalPackageFolder"
        New-Item -ItemType Directory -Force -Path $finalPackageFolder

        if ('true' -eq '${{ inputs.publish-artifacts }}') {
          Write-Host "Compressing final package"
          Copy-Item -Path '.\bin\Release${{ inputs.package-id }}\*' -Destination ".\" -recurse -Force  
        }

    - name: Upload Artifacts
      uses: actions/upload-artifact@v2
      with:
        name: "${{ inputs.package-id }}_${{ steps.gitversion.outputs.assemblySemVer }}" 
        path: .\artifacts${{ inputs.package-id }}
        retention-days: ${{ inputs.artifact-retention-policy }}