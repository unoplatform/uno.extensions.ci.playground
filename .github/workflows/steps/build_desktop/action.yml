name: Build Desktop
description: ""

inputs:
  package-id:
    description: 'Compiled Package ID'
    required: true
    default: 'release_Windows'
  project-to-build:
    description: 'Relative path to .csproj file'
    required: true
    default: ''
  project-platform:
    description: 'Platform to build'
    required: false
    default: 'x86'
  project-folder:
    description: 'csproj folder'
    required: true
    default: ''     
  artifact-retention-policy: 
    description: 'Number of days to keep the build artifacts'
    required: false
    default: '90'
  target-platform: 
    description: 'Possible values are gtk, windows and linux'
    required: false
    default: ''     
runs:
  using: "composite"
  steps:
    - name: Setup GitVersion
      uses: gittools/actions/gitversion/setup@v0.9.9
      with:
        versionSpec: '5.x'

    - name: GitVersion
      id: gitversion
      uses: gittools/actions/gitversion/execute@v0.9.9
      with:
        useConfigFile: true
        configFilePath: ./.github/workflows/config/gitversion.yml

    # Add  MSBuild to the PATH: https://github.com/microsoft/setup-msbuild
    - name: Setup MSBuild.exe
      uses: microsoft/setup-msbuild@v1.0.2

    # Install GTK4
    - name: Install GTK4
      continue-on-error: true
      shell: pwsh
      run: |
          if ('gtk' -eq '${{ inputs.target-platform }}') {
            Write-Host "Installing GTK4"
            Set-ExecutionPolicy Bypass -Scope Process -Force; iex ((New-Object System.Net.WebClient).DownloadString('https://community.chocolatey.org/install.ps1'))
            choco install git
            choco install msys2
            choco install visualstudio2022-workload-vctools

            Write-Host "Installing Python"
            choco install python
            Write-Host "Python Installation Finished"

            python -m pip install --user pipx
            python -m pipx ensurepath
            pipx install gvsbuild
            
            gvsbuild build gtk4

            Write-Host "Adding GTK4 to Path"
            $env:Path = "C:\gtk-build\gtk\x64\release\bin;" + $env:Path
            Write-Host "GTK4 Installation Finished"
          }

    - name: Sleep for 15s to release dotnet.exe
      run: Start-Sleep -s 15
      shell: pwsh        

    # Create the app package by building and packaging the project
    - name: Build and Create Package
      shell: pwsh
      run: |
        msbuild ${{ inputs.project-to-build }} /p:Configuration=$env:Configuration /p:Platform=$env:Platform

        $finalPackageFolder = ".\artifacts"
        Write-Host "Creating package folder: $finalPackageFolder"
        New-Item -ItemType Directory -Force -Path $finalPackageFolder

        $finalPackageName = "$finalPackageFolder\${{ inputs.package-id }}(${{ inputs.project-platform }})_${{ steps.gitversion.outputs.assemblySemVer }}.zip"
        Write-Host "Compressing final package: $finalPackageName"
        Compress-Archive -Path '${{ inputs.project-folder }}\packages\*' -DestinationPath $finalPackageName  

    - name: Upload Artifacts
      uses: actions/upload-artifact@v2
      with:
        name: "${{ inputs.package-id }}(${{ inputs.project-platform }})_${{ steps.gitversion.outputs.assemblySemVer }}" 
        path: .\artifacts
        retention-days: ${{ inputs.artifact-retention-policy }}