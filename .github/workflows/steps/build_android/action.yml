name: Build Android
description: ""

inputs:
  package-id:
    description: 'Compiled Package ID'
    required: true
    default: 'release_Mobile'
  project-to-build:
    description: 'Relative path to .csproj file'
    required: true
    default: ''   
  artifact-retention-policy: 
    description: 'Number of days to keep the build artifacts'
    required: false
    default: '90'
  certificate: 
     description: "Base64 Certificate for signing .apk package. Required if 'sign-package': 'true'"
     required: false    
  certificate-password: 
     description: "Certificate password. Required if 'sign-package': 'true'"
     required: false      
  certificate-alias: 
     description: "Keystore alias. Required if 'sign-package': 'true'"
     required: false   
  sign-package: 
     description: "If true will use the 'certificate' input to sign final .apk package"
     required: false
     default: 'false'   
  publish-artifacts: 
     description: "If true, compilation artifacts will be published and put under Job Summary section"
     required: false
     default: 'true'    
               
runs:
  using: "composite"
  steps:
    - name: Setup GitVersion
      uses: gittools/actions/gitversion/setup@v0.9.9
      with:
        versionSpec: '5.x'

    - name: GitVersion
      id: gitversion
      uses: gittools/actions/gitversion/execute@v0.9.9
      with:
        useConfigFile: true
        configFilePath: ./.github/workflows/config/gitversion.yml

    # Decode the base 64 encoded pfx and save the Signing_Certificate
    - name: Decode the jks
      shell: pwsh
      run: |
        if ('true' -eq '${{ inputs.sign-package }}') {
          $jks_cert_byte = [System.Convert]::FromBase64String("${{ inputs.certificate }}")
          $certificatePath = "${{ inputs.package-id }}_TemporaryKey.jks"
          [IO.File]::WriteAllBytes("$certificatePath", $jks_cert_byte)
        }

    # Create the app package by building and packaging the project
    - name: Build and create package
      shell: pwsh
      run: |
        Write-Host "Building ${{ inputs.package-id }}"

        if ('true' -eq '${{ inputs.sign-package }}') {
          dotnet publish  -c Release -p:TargetFramework=net6.0-android  -o .\bin\Release${{ inputs.package-id }}\ ${{ inputs.project-to-build }} /p:AndroidSigningKeyStore=${{ inputs.package-id }}_TemporaryKey.jks /p:AndroidSigningStorePass=${{ inputs.certificate-password }} /p:AndroidSigningKeyAlias=${{ inputs.certificate-alias }} 
        }else{
          dotnet publish  -c Release -p:TargetFramework=net6.0-android  -o .\bin\Release${{ inputs.package-id }}\ ${{ inputs.project-to-build }} 
        }

        $finalPackageFolder = ".\artifacts${{ inputs.package-id }}"
        Write-Host "Creating package folder: $finalPackageFolder"
        New-Item -ItemType Directory -Force -Path $finalPackageFolder

        if ('true' -eq '${{ inputs.publish-artifacts }}') {
          Write-Host "Compressing final package"
          Copy-Item -Path '.\bin\Release${{ inputs.package-id }}\*' -Destination ".\artifacts${{ inputs.package-id }}" -recurse -Force  
        }

    # Remove the jks
    - name: Remove the jks
      shell: pwsh
      run: |
        if ('true' -eq '${{ inputs.sign-package }}') {
          Remove-Item -path ${{ inputs.package-id }}_TemporaryKey.jks
        }
        
    - name: Upload Artifacts
      uses: actions/upload-artifact@v2
      with:
        name: "${{ inputs.package-id }}_${{ steps.gitversion.outputs.assemblySemVer }}" 
        path: .\artifacts${{ inputs.package-id }}
        retention-days: ${{ inputs.artifact-retention-policy }}